import e from"node:process";globalThis._importMeta_={url:import.meta.url,env:e.env};import{u as t,n as o,j as r,g as a}from"./chunks/_/nitro.mjs";import"node:http";import"node:https";import"node:events";import"node:buffer";import"@iconify/utils";import"node:crypto";import"consola";import"node:url";import"ipx";import"node:fs";import"node:path";const s=t(),handler=async e=>{const t=new URL(e.url),a=`${t.pathname}${t.search}`,n=await s.localCall({url:a,headers:e.headers,method:e.method,body:e.body}),i=function(e){const t=new Headers;for(const[a,s]of Object.entries(e))if("set-cookie"===a)for(const e of o(s))t.append("set-cookie",e);else void 0!==s&&t.set(a,r(s));return t}({...getCacheHeaders(t.pathname),...n.headers});return new Response(n.body,{status:n.status,headers:i})},n=31536e3;function getCacheHeaders(e){const{isr:t}=a(e);if(t){return{"Cache-Control":"public, max-age=0, must-revalidate","Netlify-CDN-Cache-Control":`public, max-age=${"number"==typeof t?t:n}, ${"number"==typeof t?`stale-while-revalidate=${n}`:"must-revalidate"}, durable`}}return{}}export{handler as default};
//# sourceMappingURL=main.mjs.map
